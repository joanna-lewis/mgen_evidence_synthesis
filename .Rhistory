test = stan("/Users/Joanna/OneDrive - Imperial College London/backup/people/Zhengyang Zhu/010319/inc.stan",
data = stan_d,
init = list(list(
U0 = 0.92,
A0 = 0.05,
foia = 0.0001,
foik = 0.0001,
foic = 0.0001,
foib = log(0.05),
pasymp = 0.51,
clear = 0.47,
scra = 0.0001,
scrk = 0.0001,
scrc = 0.0001,
scrb = log(0.4),
treat = 14.4,
sensi = 0.971,
speci = 0.00314)),
chains = 1, iter =20, warmup = 10)
test = stan("/Users/Joanna/OneDrive - Imperial College London/backup/people/Zhengyang Zhu/010319/inc.stan",
data = stan_d,
init = list(list(
U0 = 0.92,
A0 = 0.05,
foia = 0.0001,
foik = 0.0001,
foic = 0.0001,
foib = log(0.05),
pasymp = 0.51,
clear = 0.47,
scra = 0.0001,
scrk = 0.0001,
scrc = 0.0001,
scrb = log(0.4),
treat = 14.4,
sensi = 0.971,
speci = 0.00314)),
chains = 1, iter =20, warmup = 10)
library(haven)
install.packages("haven")
library(haven)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/final.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/formats.sas7bcat")
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/final.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
names(dat)
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/ae_upd.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/ae.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/baseline.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/conmed.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/conmed.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/contact.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/final.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/lab.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/missed.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/preg.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/pregout.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
dat <- read_sas("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/datasets/survey.sas7bdat", "/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Sena/formats.sas7bcat")
head(dat)
1 - (1 - 0.108)^10
atp <- matrix(c(17, 13, 17-8, 13-2))
atp <- matrix(c(17, 13, 17-8, 13-2), nrow=2)
atp
chisq.test(atp)
atp <- matrix(c(17, 13, 90-17, 86-13), nrow=2)
chisq.test(atp)
atp
itt <- matrix(c(18, 13, 91-18, 90-13), nrow=2)
chisq.test(itt)
itt_im <- matrix(c(9, 2, 91-9, 90-2), nrow=2)
chisq.test(itt_im)
summary(chisq.test(itt_im))
(chisq.test(itt_im))$parameter
(chisq.test(itt_im))$observed
13/90
1-13/90
install.packages("abd")
library(abd)
odds.ratio(itt_im)
library(abd)
odds.ratio(itt_im)
orr(itt_im)
library(mosaic)
orr(itt_im)
orrr(itt_im)
orrr(t(itt_im))
oddsRatio(t(itt_im))
oddsRatio(t(itt_im), verbose=TRUE)
itt_im <- matrix(c(9, 2, 18-9, 13-2), nrow=2)
oddsRatio(t(itt_im), verbose=TRUE)
oddsRatio(itt_im, verbose=TRUE)
itt_im
itt_im <- matrix(c(9, 2, 91-9, 90-2), nrow=2)
oddsRatio(itt_im, verbose=TRUE)
0.1098/0.02273
oddsRatio(t(itt_im), verbose=TRUE)
itt_im <- matrix(c(91-9, 90-2, 9, 2), nrow=2)
oddsRatio(t(itt_im), verbose=TRUE)
chisq.test(itt_im)
itt_im <- matrix(c(90-2, 91-9, 2, 9), nrow=2)
chisq.test(itt_im)
oddsRatio(itt_im)
summary(oddsRatio(itt_im))
summary(oddsRatio(t(itt_im)))
fisher.test(itt_im)
fisher.test(itt)
itt
load("~/OneDrive - Imperial College London/backup/papers/transmission_probs/ct_transmission_prob/transmission_probability_reparam_natsal2_hetnonew.RData")
ls()
library(rstan)
stan_rhat(fit_all)
sum_natsal <- summary(fit_all)
ls(sum_natsal)
ls(sum_natsal$c_summary)
ls(sum_natsal$summary)
names(sum_natsal$summary)
head(sum_natsal$summary)
summary(sum_natsal$summary[,'Rhat'])
sum_natsal$summary
summary(sum_natsal$summary[is.na(sum_natsal$summary[,'Rhat']),])
sum_natsal$summary[is.na(sum_natsal$summary[,'Rhat']),]
summary(sum_natsal$summary
)
summary(sum_natsal$summary[,'Rhat'])
summary(sum_natsal$c_summary[,'Rhat'])
ls(sum_natsal$c_summary)
sum_natsal$c_summary
summary(sum_natsal$c_summary[,'Rhat',1])
summary(sum_natsal$c_summary[,'Rhat',"chains = chain:1"])
summary(sum_natsal$c_summary[,'Rhat',])
sum_natsal$c_summary)[,'Rhat',]
sum_natsal$c_summary[,'Rhat',]
(sum_natsal$c_summary)[,'Rhat',]
dimnames(sum_natsal$c_summary)
str(sum_natsal$c_summary)
str(sum_natsal$c_summary$chains)
str(sum_natsal$c_summary['chains'])
sum_natsal$c_summary['chains']
sum_natsal$c_summary[,,'1']
sum_natsal$c_summary[,,1]
summary(sum_natsal$summary[,'Rhat'])
summary(sum_natsal$summary[,'neff'])
summary(sum_natsal$summary[,'n_eff'])
summary(sum_natsal$summary[,'n_eff']/25000)
load("~/OneDrive - Imperial College London/backup/papers/transmission_probs/ct_transmission_prob/transmission_probability_reparam_nhanes_hetnonew.RData")
stan_rhat(fit_all)
check_divergences
check_divergences(sum_nhanes)
fit_all <- fit_nhanes
fit_nhanes <- fit_all
check_divergences(fit_nhanes)
summary(sum_nhanes$summary[,'Rhat'])
sum_nhanes <- summary(fit_all)
sum_nhanes <- summary(fit_nhanes)
summary(sum_nhanes$summary[,'Rhat'])
summary(sum_nhanes$summary[,'n_eff']/25000)
check_divergences(fit_nhanes)
load("~/OneDrive - Imperial College London/backup/papers/transmission_probs/ct_transmission_prob/transmission_probability_reparam_natsal2_hetnonew.RData")
fit_natsal <- fit_all
sum_natsal <- summary(fit_all)
check_divergences(fit_natsal)
sum_natsal$summary['rho_m_f',]
sum_natsal$summary['rho_mf',]
sum_natsal$summary['rho_fm',]
sum_nhanes$summary['rho_mf',]
sum_nhanes$summary['rho_fm',]
sum_natsal$summary['diag_sim[1]',]
sum_natsal$summary['diag_sim[2]',]
sum_nhanes$summary['diag_sim[1]',]
sum_nhanes$summary['diag_sim[2]',]
c(307340, 330817, 363951, 372873, 374870, 398325) / c(52984487, 53060516, 53222668,	 53539314, 53924263, 54370407)
c(254000, 680000)/52984487
c(51823583, 45640046, 45820550, 46104962, 46442604, 46810063) / c(878708, 915153, 981253, 978003, 955850, 967568)
c(878708, 915153, 981253, 978003, 955850, 967568) / c(51823583, 45640046, 45820550, 46104962, 46442604, 46810063)
c(254, 680) / 51823583
c(254000, 680000) / 51823583
head(sum_natsal$summary)
head(sum_natsal$summary, n=10)
sum_natsal$summary['ppp[1',]
sum_natsal$summary['ppp[1]',]
sum_natsal$summary['ppp[2]',]
sum_natsal$summary['rho_fm',]
sum_natsal$summary['rho_mf',]
head(sum_nhanes$summary, n=10)
sum_nhanes$summary['ppp[1]',]
sum_nhanes$summary['ppp[2]',]
sum_nhanes$summary['rho_fm',]
sum_nhanes$summary['rho_mf',]
(list=ls())
rm(list=ls())
library(foreign)
library(rstan)
library(survey)
library(deSolve)
library(boot)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
options(survey.lonely.psu="adjust")
# Edit this line to point to your Natsal-2 dataset
n2 <- read.dta("/Users/Joanna/OneDrive - Imperial College London/backup/M_Genitalium/Natsal-2 data/stata11/natsal_2000_for_archive.dta")
n2 <- n2[(n2$c_result %in% c(0,1)),] # keep only respondents with a chlamydia test result
n2design <- svydesign(
ids = ~ totalpsu,
weights = ~ urine_wt,
strata = ~ totalstr,
data = n2
)
npart_m <- n2$hetnonew[
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew != 999)
]
ntab_m <- table(npart_m)
ntab_m <- data.frame(ntab_m)
names(ntab_m) <- c('n', 'freq')
ntab_m$prop <- ntab_m$freq/sum(ntab_m$freq)
ntab_m$low.95 <- ntab_m$high.95 <- ntab_m$prop_wt <- NA
for(i in 1:(nrow(ntab_m))){
ntab_m$low.95[i] <- binom.test(ntab_m$freq[i], sum(ntab_m$freq))$conf.int[[1]]
ntab_m$high.95[i] <- binom.test(ntab_m$freq[i], sum(ntab_m$freq))$conf.int[[2]]
ntab_m$prop_wt[i] <- svymean(
~ (hetnonew) == as.numeric(as.character(ntab_m$n[i])),
design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901)
)
)[2]
}
npart_f <- n2$hetnonew[
(n2$rsex == 'female') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew != 999)
]
ntab_f <- table(npart_f)
ntab_f <- data.frame(ntab_f)
names(ntab_f) <- c('n', 'freq')
ntab_f$prop <- ntab_f$freq/sum(ntab_f$freq)
ntab_f$low.95 <- ntab_f$high.95 <- ntab_f$prop_wt <- NA
for(i in 1:(nrow(ntab_f))){
ntab_f$low.95[i] <- binom.test(ntab_f$freq[i], sum(ntab_f$freq))$conf.int[[1]]
ntab_f$high.95[i] <- binom.test(ntab_f$freq[i], sum(ntab_f$freq))$conf.int[[2]]
ntab_f$prop_wt[i] <- svymean(
~ (hetnonew) == as.numeric(as.character(ntab_f$n[i])),
design = subset(n2design,
(n2$rsex == 'female') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901)
)
)[2]
}
for(i in sort(unique(npart_m))){
print(i)
print(table(n2$c_result[(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i)]))
print(100*svyciprop(~(c_result == 1),
design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i) &
(n2$c_result %in% c(0,1))
),
method = "beta"
)
)
print(100*attr(svyciprop(~(c_result == 1),
design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i) &
(n2$c_result %in% c(0,1))
),
method = "beta"
), 'ci'
))
}
for(i in sort(unique(npart_f))){
print(i)
print(table(n2$c_result[(n2$rsex == 'female') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i)]))
print(100*svyciprop(~(c_result == 1),
design = subset(n2design,
(n2$rsex == 'female') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i) &
(n2$c_result %in% c(0,1))
),
method = "beta"
)
)
print(100*attr(svyciprop(~(c_result == 1),
design = subset(n2design,
(n2$rsex == 'female') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$hetnonew == i) &
(n2$c_result %in% c(0,1))
),
method = "beta"
), 'ci'
))
}
svymean(~hetnonew, design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901))
)
svyby(~hetnonew, by = ~c_result, design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$c_result %in% c(0,1))
))
svyby(~hetnonew, by = ~c_result, design = subset(n2design,
(n2$rsex == 'male') &
(n2$het == 'het. sex. intercourse aged 13+') &
(n2$het1yr %in% 1:901) &
(n2$c_result %in% c(0,1))
),
svymean)
rm(list=ls())
library(foreign)
data <- read.spss("/Users/Joanna/OneDrive - Imperial College London/backup/Ken Earle/PREVENT baseline.sav", to.data.frame = TRUE)
View(data)
names(data)
100*0.148/87
100*0.048/87
100*0.25/87
100*0.148/89
100*0.048/89
100*0.25/89
0.34*17.1
0.34*17
0.34*16.6
4/36
11/36
11/36
7/36
36-18
18/36
11/29
18/29
37.9/55
29/36
32/36
rm(list=ls())
set.seed(12345)
library(rstan)
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
dt <- list(
prev_num_ct = 137, # Oakeshott 2010
prev_denom_ct = 2377, # Oakeshott 2010
prev_num_mg = 78, # Oakeshott 2010
prev_denom_mg = 2378, # Oakeshott 2010
N_persist = 1, # number of data points for persistence time
persist_t = 16/12, # times for persistence follow-up
persist_num = array(7), # numerators for persistence follow-up
persist_denom = array(27), # denominators for persistence follow-up
pid_given_infected_num_ct = 7, # Oakeshott 2010
pid_given_infected_denom_ct = 70, # Oakeshott 2010
pid_given_susceptible_num_ct = 31, # Oakeshott 2010
pid_given_susceptible_denom_ct = 2114, # Oakeshott 2010
pid_given_infected_num_mg = 3, # Oakeshott 2010
pid_given_infected_denom_mg = 77, # Oakeshott 2010
pid_given_susceptible_num_mg = 36, # Oakeshott 2010
pid_given_susceptible_denom_mg = 2169 # Oakeshott 2010
)
inits <- list(chain1 = list(NA),
chain2 = list(NA),
chain3 = list(NA),
chain4 = list(NA),
chain5 = list(NA)
)
for(i in 1:5){
inits[[i]] <- list(alpha_SC = exp(rnorm(1,0,1)),
alpha_SM = exp(rnorm(1,0,1)),
alpha_CS = exp(rnorm(1,0,1)),
alpha_MS = exp(rnorm(1,0,1)),
alpha_SP = exp(rnorm(1,0,1)),
alpha_CP = exp(rnorm(1,0,1)),
alpha_MP = exp(rnorm(1,0,1))
)
}
fitmgct <- stan('SIS-5.stan',
data = dt,
chains = 5,
iter = 20000,
warmup = 5000,
init = inits,
seed = 67890,
control = list(max_treedepth = 10)
)
setwd("~/OneDrive - Imperial College London/backup/papers/m_genitalium_short_report/mgen_evidence_synthesis")
fitmgct <- stan('SIS-5.stan',
data = dt,
chains = 5,
iter = 20000,
warmup = 5000,
init = inits,
seed = 67890,
control = list(max_treedepth = 10)
)
opmgct <- extract(fitmgct)
plot(opmgct$lp__, type='l')
pid_rate <- apply(opmgct$natsal_pid, 2, quantile, p=c(0.5, 0.025, 0.975))
pid_rate_obs <- apply(opmgct$natsal_pid_obs, 2, quantile, p=c(0.5, 0.025, 0.975))
pid_mg_rate <- apply(opmgct$natsal_pid_mg, 2, quantile, p=c(0.5, 0.025, 0.975))
pid_ct_rate <- apply(opmgct$natsal_pid_ct, 2, quantile, p=c(0.5, 0.025, 0.975))
dt_price_16 <- data.frame(
age = c("16-19", "20-24", "25-34", "35-44"),
HES = c(1233, 3101, 9756, 10526),
GPRD = c(5083, 8842, 14932, 9609),
GUM = c(3212, 4399, 3919, 1388),
pop = c(1199600, 1519100, 3502100, 3795600)*c(0.679, 0.944, 0.991, 0.991) # adjust for Natsal-2 proportion sexually active
)
dt_price_16$total_max <- dt_price_16$HES + dt_price_16$GPRD + dt_price_16$GUM
dt_price_16$rate_max <- 100000*dt_price_16$total_max/dt_price_16$pop
dt_price_16$total_min <- apply(dt_price_16[,c("HES","GPRD")], 1, max) + dt_price_16$GUM
dt_price_16$rate_min <- 100000*dt_price_16$total_min/dt_price_16$pop
par(mfrow=c(1,1), mar = c(5,5,4,2))
plot(1:4,
pid_rate_obs[1,],
xlim=c(0.5, 4.5), ylim=c(0, 1500),
xlab="Age group", ylab = "Observed PID rate per 100000 sexually-active women",
xaxt = "n"
)
axis(1, at=1:4, labels=dt_price_16$age)
arrows(x0=1:4, y0=pid_rate_obs[2,], y1=pid_rate_obs[3,], code=3, angle=90, length=0.05)
h1 <- hist(opmgct$natsal_pid_obs[,1], n=100, plot=FALSE)
h2 <- hist(opmgct$natsal_pid_obs[,2], n=100, plot=FALSE)
h3 <- hist(opmgct$natsal_pid_obs[,3], n=100, plot=FALSE)
h4 <- hist(opmgct$natsal_pid_obs[,4], n=100, plot=FALSE)
polygon(1 + c(0, 100*rep(h1$density, each=2), 0),rep(h1$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(1 - c(0, 100*rep(h1$density, each=2), 0),rep(h1$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(2 + c(0, 100*rep(h2$density, each=2), 0),rep(h2$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(2 - c(0, 100*rep(h2$density, each=2), 0),rep(h2$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(3 + c(0, 100*rep(h3$density, each=2), 0),rep(h3$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(3 - c(0, 100*rep(h3$density, each=2), 0),rep(h3$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(4 + c(0, 100*rep(h4$density, each=2), 0),rep(h4$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
polygon(4 - c(0, 100*rep(h4$density, each=2), 0),rep(h4$breaks, each=2), col=rgb(0,0,0,0.3), border=NA)
lines(1:4, dt_price_16$rate_max, lty=2)
lines(1:4, dt_price_16$rate_min, lty=2)
pid_ct_obs <- apply(opmgct$natsal_pid_ct_obs, 2, quantile, p=c(0.5, 0.025, 0.975))
points((1:4)-0.1, pid_ct_obs[1,], pch=2)
arrows((1:4)-0.1, y0=pid_ct_obs[2,], y1=pid_ct_obs[3,], code=3, length=0.05, angle=90)
pid_mg_obs <- apply(opmgct$natsal_pid_mg_obs, 2, quantile, p=c(0.5, 0.025, 0.975))
points((1:4)+0.1, pid_mg_obs[1,], pch=6)
arrows((1:4)+0.1, y0=pid_mg_obs[2,], y1=pid_mg_obs[3,], code=3, length=0.05, angle=90)
legend('topright', pch=c(1,2,6,NA), lty=c(0,0,0,2), cex=0.7,
legend = c('Predicted: all causes', 'Predicted: Ct', 'Predicted: Mgen', 'Data: all causes'))
mtext("Predicted: all causes", side=3, at=-0.55, adj=0, line=2.3, cex=0.7)
axis(side=3, at=1:4, labels = paste(
round(pid_rate_obs[1,]),
' (',
round(pid_rate_obs[2,]),
'-',
round(pid_rate_obs[3,]),
')',
sep = ""),
tick = FALSE,
line=1.3, cex.axis=0.7
)
mtext("Predicted: Ct", side=3, at=-0.55, adj=0, line=1.5, cex=0.7)
axis(side=3, at=1:4, labels = paste(
round(pid_ct_obs[1,]),
' (',
round(pid_ct_obs[2,]),
'-',
round(pid_ct_obs[3,]),
')',
sep = ""),
tick = FALSE,
line=0.5, cex.axis=0.7
)
mtext("Predicted: Mgen", side=3, at=-0.55, adj=0, line=0.7, cex=0.7)
axis(side=3, at=1:4, labels = paste(
round(pid_mg_obs[1,]),
' (',
round(pid_mg_obs[2,]),
'-',
round(pid_mg_obs[3,]),
')',
sep = ""),
tick = FALSE,
line=-0.3, cex.axis=0.7
)
(1-0.05)^2
1 - (1-0.05)^2
1 - (1-0.05)
1 - (1-0.05)^3
(1-0.05)^3
11/32
21/38
